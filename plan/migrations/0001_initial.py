# Generated by Django 2.1.5 on 2019-04-05 09:01

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('phone', '0010_phonecontent'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalBenefit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_bundle_credit', models.CharField(blank=True, max_length=500, null=True, verbose_name='Monthly bundle Credit')),
                ('special_number_benefits', models.CharField(blank=True, max_length=500, null=True, verbose_name='Special Number Benefits')),
                ('welcome_package_benefits', models.CharField(blank=True, max_length=500, null=True, verbose_name='welcome package Benefits')),
                ('contract_renewal_benefits', models.CharField(blank=True, max_length=500, null=True, verbose_name='Contract Renewal Benefits')),
                ('benefits', models.CharField(blank=True, max_length=500, null=True, verbose_name='Benefits')),
                ('device_discount_benefits', models.CharField(blank=True, max_length=500, null=True, verbose_name='Device discount Benefit')),
                ('other_benefits', models.CharField(blank=True, max_length=500, null=True, verbose_name='Other benefits')),
                ('eligibility', models.CharField(blank=True, max_length=500, null=True, verbose_name='Eligibility')),
            ],
            options={
                'verbose_name': 'Additional Benefit',
                'verbose_name_plural': 'Additional Benefits',
                'db_table': 'additionalBenefit',
            },
        ),
        migrations.CreateModel(
            name='BulkUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp_method', models.CharField(blank=True, choices=[('OTP1', 'OTP1'), ('OTP2', 'OTP2'), ('OTP3', 'OTP3')], help_text='<p>OTP1 = <b>Package One Time Setup Fees</b><br/> OTP2 = <b>Package One Time Setup Fees + Device Upfront One Time Payment</b><br/> OTP3= <b>Package One Time Setup Fees +  2 x(Package Fees) +2 x (Device Installment Value)</b> <br/>', max_length=10, null=True, verbose_name='One Time payment Calculation Method')),
                ('mf_method', models.CharField(blank=True, choices=[('MF1', 'MF1'), ('MF2', 'MF2')], help_text='<p>MF1 = <b>Package Fees</b><br/> MF2 = <b>Package Fees + Device Installment Value</b><br/> <br/>', max_length=10, null=True, verbose_name='Monthly Fees Calculation Method')),
            ],
            options={
                'verbose_name': 'Bulk plan upload',
                'verbose_name_plural': 'Bulk plan uploads',
                'db_table': 'bulkupload',
            },
        ),
        migrations.CreateModel(
            name='Bundle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bundle_name', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'verbose_name': 'bundle',
                'verbose_name_plural': 'bundles',
                'db_table': 'bundle',
            },
        ),
        migrations.CreateModel(
            name='BundleAttributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_name', models.CharField(blank=True, max_length=20, null=True)),
                ('attribute_value', models.CharField(blank=True, max_length=20, null=True)),
                ('bundle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Bundle')),
            ],
            options={
                'verbose_name': 'bundle attribute',
                'verbose_name_plural': 'bundle attributes',
                'db_table': 'bundleAttribute',
            },
        ),
        migrations.CreateModel(
            name='Call',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calls_to_same_package_free_minutes', models.IntegerField(blank=True, default=0, null=True, verbose_name='Calls to same package free minutes ')),
                ('calls_to_all_network_free_minutes', models.IntegerField(blank=True, default=0, null=True, verbose_name='Calls to All networks free minutes ')),
                ('calls_to_all_network_rate_min_after_cons', models.CharField(blank=True, max_length=10, null=True, verbose_name='Calls to All network rate/min after consumption')),
                ('calls_to_all_network_rate_min', models.CharField(blank=True, max_length=10, null=True, verbose_name='Calls to All network rate/min')),
                ('on_same_net_free_minutes', models.IntegerField(blank=True, default=0, null=True, verbose_name='On Same Network free minutes')),
                ('on_same_net_rate_minutes', models.CharField(blank=True, max_length=10, null=True, verbose_name='On Same Network Rate/min after consumption')),
                ('on_same_net_voice_call_rate', models.CharField(blank=True, max_length=10, null=True, verbose_name='On Same Network voice call rate')),
                ('on_same_net_voice_call_rate_peak_hour', models.CharField(blank=True, max_length=10, null=True, verbose_name='On Same Network voice call rate (Peak Hours)')),
                ('on_same_net_voice_call_rate_off_peak_hour', models.CharField(blank=True, max_length=10, null=True, verbose_name='On Same Network voice call rate (Off-Peak Hours)')),
                ('to_other_network_free_minutes', models.IntegerField(blank=True, default=0, null=True, verbose_name='To Other Networks free minutes')),
                ('to_other_network_voice_call_rate_min_after_cons', models.CharField(blank=True, max_length=10, null=True, verbose_name='To Other Networks voice callrate/min after consumption ')),
                ('to_other_network_voice_call_rate_min', models.CharField(blank=True, max_length=10, null=True, verbose_name='To Other Networks voice call rate/min')),
                ('to_other_network_voice_call_rate_peak_hour', models.CharField(blank=True, max_length=10, null=True, verbose_name='To Other Networks voice call rate (Peak Hours)')),
                ('to_other_network_voice_call_rate_off_peak_hour', models.CharField(blank=True, max_length=10, null=True, verbose_name='To Other Networks voice call rate (Off-Peak Hours)')),
                ('land_line_free_minutes', models.IntegerField(blank=True, default=0, null=True, verbose_name='Land line free minutes')),
                ('land_line_voice_call_rate_peak_hours', models.CharField(blank=True, max_length=10, null=True, verbose_name='Land line voice call rate (Peak Hours)')),
                ('land_line_voice_call_rate_off_peak_hours', models.CharField(blank=True, max_length=10, null=True, verbose_name='Land line voice call rate (Off-Peak Hours)')),
                ('local_free_minutes', models.IntegerField(blank=True, default=0, null=True, verbose_name='Local free minutes')),
                ('local_voice_call_rate_peak_hour', models.CharField(blank=True, max_length=10, null=True, verbose_name='Local voice call rate (Peak Hours)')),
                ('local_voice_call_rate_off_peak_hour', models.CharField(blank=True, max_length=10, null=True, verbose_name='Local voice call rate (Off-Peak Hours)')),
                ('donut_call_val', models.IntegerField(blank=True, default=0, null=True, verbose_name='Donut call Value')),
            ],
            options={
                'verbose_name': 'call',
                'verbose_name_plural': 'calls',
                'db_table': 'call',
            },
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('free_internet', models.IntegerField(blank=True, default=0, null=True, verbose_name='Free Internet Quota (MB)')),
                ('add_free_internet', models.IntegerField(blank=True, default=0, null=True, verbose_name='Additional free Internet Quota (GB)')),
                ('free_internet_wifi', models.IntegerField(blank=True, default=0, null=True, verbose_name='Free Internet Wi-Fi (MB)')),
                ('fair_policy', models.IntegerField(blank=True, default=0, null=True, verbose_name='Fair policy (Daily MB)')),
                ('after_quota_fair_policy', models.IntegerField(blank=True, default=0, null=True, verbose_name='After /quota Fair policy consumption(kbps)')),
                ('rate_after_consumption', models.IntegerField(blank=True, default=0, null=True, verbose_name='Rate/MB after consumption(SAR)')),
                ('data_usage_rate', models.IntegerField(blank=True, default=0, null=True, verbose_name='Data Usage Rate/MB')),
                ('free_access_to_apps', models.BooleanField(default=False, verbose_name='Free Access to Apps (Yes/No)')),
                ('social_media_free_mb', models.IntegerField(blank=True, default=0, null=True, verbose_name='Social Media Free MB')),
                ('Social_includes', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Facebook', 'Facebook'), ('Twitter', 'Twitter'), ('Instagram', 'Instagram'), ('Snapchat', 'Snapchat'), ('Viber', 'Viber'), ('WhatsApp', 'WhatsApp'), ('Skype', 'Skype'), ('Tango', 'Tango'), ('YouTube', 'YouTube'), ('imo', 'imo'), ('LinkedIn', 'LinkedIn')], max_length=83, null=True)),
                ('donut_data_val', models.IntegerField(blank=True, default=0, null=True, verbose_name='Donut Data Value')),
            ],
            options={
                'verbose_name': 'data',
                'verbose_name_plural': 'datas',
                'db_table': 'data',
            },
        ),
        migrations.CreateModel(
            name='DeviceImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(max_length=255, upload_to='', verbose_name='Image')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceRam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_ram', models.IntegerField(blank=True, default=0, null=True, verbose_name='Device RAM')),
                ('storage_capacity', models.CharField(choices=[('GB', 'GB'), ('MB', 'MB'), ('NONE', 'NONE')], default='NONE', max_length=50, null=True, verbose_name='Capacity parameter')),
            ],
            options={
                'verbose_name': 'RAM related to plan',
                'verbose_name_plural': 'RAM related to plan',
            },
        ),
        migrations.CreateModel(
            name='InternationalBenefit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('international_free_minutes', models.IntegerField(blank=True, default=0, null=True, verbose_name='International free minutes')),
                ('international_roaming_benefit', models.CharField(blank=True, max_length=500, null=True, verbose_name='International Roaming Benefits')),
                ('international_roaming_benefit_en', models.CharField(blank=True, max_length=500, null=True, verbose_name='International Roaming Benefits')),
                ('international_roaming_benefit_ar', models.CharField(blank=True, max_length=500, null=True, verbose_name='International Roaming Benefits')),
                ('international_roaming_benefit_fr', models.CharField(blank=True, max_length=500, null=True, verbose_name='International Roaming Benefits')),
                ('international_roaming_countries', models.CharField(blank=True, max_length=10, null=True, verbose_name='Internet roaming countries')),
                ('international_free_sms', models.CharField(blank=True, max_length=10, null=True, verbose_name='International free SMS')),
                ('international_sms_rate', models.CharField(blank=True, max_length=10, null=True, verbose_name='International SMS rate')),
                ('roaming_free_data', models.IntegerField(blank=True, default=0, null=True, verbose_name='Roaming Free Data Quota (MB)')),
                ('international_rate_promotions', models.CharField(blank=True, max_length=500, null=True, verbose_name='International Rates promotion')),
                ('international_rate_promotions_en', models.CharField(blank=True, max_length=500, null=True, verbose_name='International Rates promotion')),
                ('international_rate_promotions_ar', models.CharField(blank=True, max_length=500, null=True, verbose_name='International Rates promotion')),
                ('international_rate_promotions_fr', models.CharField(blank=True, max_length=500, null=True, verbose_name='International Rates promotion')),
                ('international_minute_rate', models.CharField(blank=True, max_length=500, null=True, verbose_name='International Minute Rate')),
                ('international_minute_rate_en', models.CharField(blank=True, max_length=500, null=True, verbose_name='International Minute Rate')),
                ('international_minute_rate_ar', models.CharField(blank=True, max_length=500, null=True, verbose_name='International Minute Rate')),
                ('international_minute_rate_fr', models.CharField(blank=True, max_length=500, null=True, verbose_name='International Minute Rate')),
                ('flexible_free_minutes', models.IntegerField(blank=True, default=0, null=True, verbose_name='Flexible free minutes (Local or International)')),
            ],
            options={
                'verbose_name': 'International Benefit',
                'verbose_name_plural': 'International Benefits',
                'db_table': 'internationalBenefits',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sms_to_all_networks_free_sms', models.IntegerField(blank=True, default=0, null=True, verbose_name='SMS To all Networks free SMS')),
                ('sms_to_all_networks_after_consumption', models.CharField(blank=True, max_length=10, null=True, verbose_name='SMS To all Networks Rate/SMS after consumption (SAR)')),
                ('sms_to_all_networks_rate', models.CharField(blank=True, max_length=10, null=True, verbose_name='SMS To all Networks Rate')),
                ('on_same_net_free_sms', models.IntegerField(blank=True, default=0, null=True, verbose_name='On Same Network free SMS')),
                ('on_same_net_rate_sms_after_consumption', models.CharField(blank=True, max_length=10, null=True, verbose_name='On Same Network Rate/SMS after consumption')),
                ('on_same_net_sms_rate', models.CharField(blank=True, max_length=10, null=True, verbose_name='On the Same Network SMS rate')),
                ('to_other_networks_free_sms', models.IntegerField(blank=True, default=0, null=True, verbose_name='To other Networks  free SMS')),
                ('to_other_net_rate_sms_after_consumption', models.CharField(blank=True, max_length=10, null=True, verbose_name='To other Networks Rate/SMS after consumption')),
                ('to_other_networks_sms_rate', models.CharField(blank=True, max_length=10, null=True, verbose_name='To other Networks SMS rate')),
                ('local_free_sms', models.IntegerField(blank=True, default=0, null=True, verbose_name='Local free SMS')),
                ('local_sms_rate', models.IntegerField(blank=True, default=0, null=True, verbose_name='Local SMS rate')),
                ('donut_message_val', models.IntegerField(blank=True, default=0, null=True, verbose_name='Donut Message Value')),
            ],
            options={
                'verbose_name': 'message',
                'verbose_name_plural': 'messages',
                'db_table': 'message',
            },
        ),
        migrations.CreateModel(
            name='MMS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('on_net_mms', models.CharField(blank=True, max_length=10, null=True, verbose_name='On-net MMS Rate')),
                ('off_net_mms', models.CharField(blank=True, max_length=10, null=True, verbose_name='off-net MMS Rate')),
                ('off_net_mms_en', models.CharField(blank=True, max_length=10, null=True, verbose_name='off-net MMS Rate')),
                ('off_net_mms_ar', models.CharField(blank=True, max_length=10, null=True, verbose_name='off-net MMS Rate')),
                ('off_net_mms_fr', models.CharField(blank=True, max_length=10, null=True, verbose_name='off-net MMS Rate')),
                ('international_mms_rate', models.CharField(blank=True, max_length=10, null=True, verbose_name='International MMS Rate')),
                ('international_mms_rate_en', models.CharField(blank=True, max_length=10, null=True, verbose_name='International MMS Rate')),
                ('international_mms_rate_ar', models.CharField(blank=True, max_length=10, null=True, verbose_name='International MMS Rate')),
                ('international_mms_rate_fr', models.CharField(blank=True, max_length=10, null=True, verbose_name='International MMS Rate')),
            ],
            options={
                'verbose_name': 'MMS',
                'verbose_name_plural': 'MMS',
                'db_table': 'MMS',
            },
        ),
        migrations.CreateModel(
            name='operators',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operator', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, max_length=255, null=True, upload_to='', verbose_name='Operator Logo')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='phone.Country')),
            ],
            options={
                'verbose_name': 'operator',
                'verbose_name_plural': 'operators',
                'db_table': 'operator',
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, max_length=100, null=True)),
                ('name_ar', models.CharField(blank=True, max_length=100, null=True)),
                ('name_fr', models.CharField(blank=True, max_length=100, null=True)),
                ('slug', models.SlugField(blank=True, max_length=250, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(blank=True, choices=[('branch', 'Go To nearest Branch'), ('online', 'Buy Online')], max_length=50, null=True, verbose_name='e-commerce status')),
                ('website_description', models.TextField(blank=True, max_length=1000, null=True)),
                ('website_description_en', models.TextField(blank=True, max_length=1000, null=True)),
                ('website_description_ar', models.TextField(blank=True, max_length=1000, null=True)),
                ('website_description_fr', models.TextField(blank=True, max_length=1000, null=True)),
                ('commitment_months', models.IntegerField(blank=True, default=0, null=True)),
                ('validity_days', models.IntegerField(blank=True, default=0, null=True)),
                ('fee', models.IntegerField(blank=True, default=0, null=True)),
                ('one_time_setup_fee', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('fee_notes', models.CharField(blank=True, max_length=500, null=True)),
                ('fee_notes_en', models.CharField(blank=True, max_length=500, null=True)),
                ('fee_notes_ar', models.CharField(blank=True, max_length=500, null=True)),
                ('fee_notes_fr', models.CharField(blank=True, max_length=500, null=True)),
                ('initial_credit', models.IntegerField(blank=True, default=0, null=True)),
                ('pay_type', models.CharField(blank=True, choices=[('postpaid', 'POSTPAID'), ('prepaid', 'PREPAID')], max_length=50, null=True, verbose_name='pay type')),
                ('line_type', models.CharField(blank=True, choices=[('voice', 'VOICE'), ('internet', 'INTERNET')], max_length=50, null=True, verbose_name='line type')),
                ('plan_type', models.BooleanField(default=False, verbose_name='only sim')),
                ('special_conditions', models.CharField(blank=True, max_length=100, null=True)),
                ('subscription_fee', models.CharField(blank=True, max_length=10, null=True)),
                ('monthly_fee', models.CharField(blank=True, max_length=10, null=True)),
                ('is_upfront_payment', models.BooleanField(default=False)),
                ('upfront_payment_per_year', models.IntegerField(blank=True, null=True)),
                ('is_renewable', models.BooleanField(default=False)),
                ('renewable_fee', models.CharField(blank=True, max_length=10, null=True)),
                ('prorated', models.CharField(blank=True, max_length=10, null=True)),
                ('validity', models.CharField(blank=True, max_length=10, null=True)),
                ('vanity_number', models.CharField(blank=True, max_length=10, null=True)),
                ('otp_method', models.CharField(blank=True, choices=[('OTP1', 'OTP1'), ('OTP2', 'OTP2'), ('OTP3', 'OTP3')], help_text='<p>OTP1 = <b>Package One Time Setup Fees</b><br/> OTP2 = <b>Package One Time Setup Fees + Device Upfront One Time Payment</b><br/> OTP3= <b>Package One Time Setup Fees +  2 x(Package Fees) +2 x (Device Installment Value)</b> <br/>', max_length=10, null=True, verbose_name='One Time payment Calculation Method')),
                ('mf_method', models.CharField(blank=True, choices=[('MF1', 'MF1'), ('MF2', 'MF2')], help_text='<p>MF1 = <b>Package Fees</b><br/> MF2 = <b>Package Fees + Device Installment Value</b><br/> <br/>', max_length=10, null=True, verbose_name='Monthly Fees Calculation Method')),
                ('publication_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Activate Plan on:')),
                ('publication_date_end', models.DateTimeField(default=datetime.datetime(2020, 4, 4, 9, 1, 9, 422854, tzinfo=utc), verbose_name='Deactivate Plan on:')),
                ('plan_url_english', models.CharField(blank=True, max_length=1000, null=True)),
                ('plan_url_arabic', models.CharField(blank=True, max_length=1000, null=True)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='phone.Country', verbose_name='Country')),
                ('device_ram', models.ManyToManyField(blank=True, related_name='deviceram', to='plan.DeviceRam', verbose_name='Device Ram')),
                ('operator_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.operators', verbose_name='operator')),
            ],
            options={
                'verbose_name': 'plan',
                'verbose_name_plural': 'plans',
                'db_table': 'plan',
            },
        ),
        migrations.CreateModel(
            name='PlanAdditionalAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attr_name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Attribute Name')),
                ('attr_value', models.CharField(blank=True, max_length=500, null=True, verbose_name='Attribute Value')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_add_attr', to='plan.Plan')),
            ],
            options={
                'verbose_name': 'Plan Additional Attribute',
                'verbose_name_plural': 'Plan Additional Attributes',
                'db_table': 'planaddattr',
            },
        ),
        migrations.CreateModel(
            name='PlanDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('slug', models.SlugField(blank=True, max_length=250, null=True)),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('brand', models.CharField(blank=True, max_length=500, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('contract_period', models.IntegerField(blank=True, null=True, verbose_name='Contract Period (Months)')),
                ('device_upfront_otp', models.IntegerField(blank=True, null=True, verbose_name='Device Upfront One Time Payment')),
                ('discount', models.IntegerField(blank=True, null=True, verbose_name='Discount in %')),
                ('installment_value', models.IntegerField(blank=True, null=True, verbose_name='Installment Value')),
            ],
            options={
                'verbose_name': 'Device related to plan',
                'verbose_name_plural': 'Device related to plans',
                'db_table': 'planDevice',
            },
        ),
        migrations.CreateModel(
            name='PlanPhone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('slug', models.SlugField(blank=True, max_length=250, null=True)),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('brand', models.CharField(blank=True, max_length=500, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('primary_camera', models.IntegerField(blank=True, null=True, verbose_name='Primary Camera')),
                ('contract_period', models.IntegerField(blank=True, null=True, verbose_name='Contract Period (Months)')),
                ('device_upfront_otp', models.IntegerField(blank=True, null=True, verbose_name='Device Upfront One Time Payment')),
                ('discount', models.IntegerField(blank=True, null=True, verbose_name='Discount in %')),
                ('installment_value', models.IntegerField(blank=True, null=True, verbose_name='Installment Value')),
            ],
            options={
                'verbose_name': 'Phone related to plan',
                'verbose_name_plural': 'Phone related to plans',
                'db_table': 'planPhone',
            },
        ),
        migrations.CreateModel(
            name='PlanPhoneAdditionalAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attr_name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Attribute Name')),
                ('attr_value', models.CharField(blank=True, max_length=500, null=True, verbose_name='Attribute Value')),
                ('planphone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planphone_add_attr', to='plan.PlanPhone')),
            ],
            options={
                'verbose_name': 'PlanPhone Additional Attribute',
                'verbose_name_plural': 'PlanPhone Additional Attributes',
                'db_table': 'planphoneaddattr',
            },
        ),
        migrations.CreateModel(
            name='PlanPhoneCameraAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('features', models.CharField(blank=True, max_length=500, null=True, verbose_name='Camera Feautures')),
                ('Video', models.CharField(blank=True, max_length=500, null=True, verbose_name='Video')),
                ('rear_camera_quality', models.CharField(blank=True, max_length=500, null=True, verbose_name='Rear Camera Quality')),
                ('rear_camera_resolution', models.CharField(blank=True, max_length=500, null=True, verbose_name='Rear Camera Image Resolution')),
                ('front_camera_quality', models.CharField(blank=True, max_length=500, null=True, verbose_name='Front Camera Quality')),
                ('front_camera_resolution', models.CharField(blank=True, max_length=500, null=True, verbose_name='Front Camera Image Resolution')),
                ('planphones', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='planphone_cam_attr', to='plan.PlanPhone')),
            ],
            options={
                'verbose_name': 'PlanPhone Camera Attribute',
                'verbose_name_plural': 'PlanPhone Camera Attributes',
                'db_table': 'planphonecameraattr',
            },
        ),
        migrations.CreateModel(
            name='PlanPhoneConnectivityAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bluetooth', models.CharField(blank=True, max_length=500, null=True, verbose_name='Bluetooth')),
                ('bluetooth_profile', models.CharField(blank=True, max_length=500, null=True, verbose_name='Bluetooth profile')),
                ('wifi', models.CharField(blank=True, max_length=500, null=True, verbose_name='WIFI')),
                ('usb_version', models.CharField(blank=True, max_length=500, null=True, verbose_name='USB Version')),
                ('connecting_features', models.CharField(blank=True, max_length=500, null=True, verbose_name='Connectivity Features')),
                ('planphones', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='planphone_conn_attr', to='plan.PlanPhone')),
            ],
            options={
                'verbose_name': 'PlanPhone Connectivity Attribute',
                'verbose_name_plural': 'PlanPhone Connectivity Attributes',
                'db_table': 'planphoneconnattr',
            },
        ),
        migrations.CreateModel(
            name='PlanPhoneDisplayAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=500, null=True, verbose_name='Display Type')),
                ('size', models.CharField(blank=True, max_length=500, null=True, verbose_name='Display Size')),
                ('resolution', models.CharField(blank=True, max_length=500, null=True, verbose_name='Display Resolution')),
                ('protection', models.CharField(blank=True, max_length=500, null=True, verbose_name='Display Protection')),
                ('planphones', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='planphone_display_attr', to='plan.PlanPhone')),
            ],
            options={
                'verbose_name': 'PlanPhone Display Attribute',
                'verbose_name_plural': 'PlanPhone Display Attributes',
                'db_table': 'planphoneadisplayattr',
            },
        ),
        migrations.CreateModel(
            name='PlanPhoneGeneralAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(blank=True, max_length=500, null=True, verbose_name='Color')),
                ('price', models.CharField(blank=True, max_length=500, null=True, verbose_name='Price')),
                ('battery', models.CharField(blank=True, max_length=500, null=True, verbose_name='Battery')),
                ('stand_by', models.CharField(blank=True, max_length=500, null=True, verbose_name='Battery Stand By Time')),
                ('os', models.CharField(blank=True, max_length=500, null=True, verbose_name='OS')),
                ('planphones', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='planphone_general_attr', to='plan.PlanPhone')),
            ],
            options={
                'verbose_name': 'PlanPhone General Attribute',
                'verbose_name_plural': 'PlanPhone General Attributes',
                'db_table': 'planphonegeneralattr',
            },
        ),
        migrations.CreateModel(
            name='PlanPhoneImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(max_length=255, upload_to='', verbose_name='Image')),
                ('planphone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planphoneimages', to='plan.PlanPhone', verbose_name='Plan Phone Image')),
            ],
        ),
        migrations.CreateModel(
            name='PlanPhoneMediaAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loudspeaker', models.CharField(blank=True, max_length=500, null=True, verbose_name='Loudspeaker')),
                ('jack', models.CharField(blank=True, max_length=500, null=True, verbose_name='Jack')),
                ('planphones', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='planphone_media_attr', to='plan.PlanPhone')),
            ],
            options={
                'verbose_name': 'PlanPhone Media Attribute',
                'verbose_name_plural': 'PlanPhone Media Attributes',
                'db_table': 'planphonemediaattr',
            },
        ),
        migrations.CreateModel(
            name='PlanPhoneMemoryAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_slot', models.CharField(blank=True, max_length=500, null=True, verbose_name='Card Slot')),
                ('internal', models.CharField(blank=True, max_length=500, null=True, verbose_name='Memory Internal')),
                ('memory_card_upto', models.CharField(blank=True, max_length=500, null=True, verbose_name='Memory Card Up to')),
                ('planphones', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='planphone_memory_attr', to='plan.PlanPhone')),
            ],
            options={
                'verbose_name': 'PlanPhone Memory Attribute',
                'verbose_name_plural': 'PlanPhone Memory Attributes',
                'db_table': 'planphonememoryattr',
            },
        ),
        migrations.CreateModel(
            name='PlanPhoneMessagingAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attr_name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Messaging Attribute Name')),
                ('attr_value', models.CharField(blank=True, max_length=500, null=True, verbose_name='Messaging Attribute Value')),
                ('planphone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planphone_messaging_attr', to='plan.PlanPhone')),
            ],
            options={
                'verbose_name': 'PlanPhone Messaging Attribute',
                'verbose_name_plural': 'PlanPhone Messaging Attributes',
                'db_table': 'planphonemessagingattr',
            },
        ),
        migrations.CreateModel(
            name='PlanPhonePhysicalAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dimensions', models.CharField(blank=True, max_length=500, null=True, verbose_name='Dimensions')),
                ('weights', models.CharField(blank=True, max_length=500, null=True, verbose_name='Weights')),
                ('build', models.CharField(blank=True, max_length=500, null=True, verbose_name='Build')),
                ('sim', models.CharField(blank=True, max_length=500, null=True, verbose_name='Sim')),
                ('planphones', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='planphone_physical_attr', to='plan.PlanPhone')),
            ],
            options={
                'verbose_name': 'PlanPhone Physical Attribute',
                'verbose_name_plural': 'PlanPhone Physical Attributes',
                'db_table': 'planphonephysicalattr',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Plan')),
            ],
            options={
                'verbose_name': 'price',
                'verbose_name_plural': 'prices',
                'db_table': 'planPrice',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_method', models.CharField(blank=True, max_length=500, null=True, verbose_name='subscription method')),
                ('subscription_method_en', models.CharField(blank=True, max_length=500, null=True, verbose_name='subscription method')),
                ('subscription_method_ar', models.CharField(blank=True, max_length=500, null=True, verbose_name='subscription method')),
                ('subscription_method_fr', models.CharField(blank=True, max_length=500, null=True, verbose_name='subscription method')),
                ('cancellation_method', models.CharField(blank=True, max_length=500, null=True, verbose_name='Cancellation method')),
                ('cancellation_method_en', models.CharField(blank=True, max_length=500, null=True, verbose_name='Cancellation method')),
                ('cancellation_method_ar', models.CharField(blank=True, max_length=500, null=True, verbose_name='Cancellation method')),
                ('cancellation_method_fr', models.CharField(blank=True, max_length=500, null=True, verbose_name='Cancellation method')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_method', to='plan.Plan')),
            ],
            options={
                'verbose_name': 'Subscription method',
                'verbose_name_plural': 'Subscription methods',
                'db_table': 'subscriptionMethod',
            },
        ),
        migrations.AddField(
            model_name='plan',
            name='plan_device',
            field=models.ManyToManyField(blank=True, related_name='plandevice', to='plan.PlanDevice', verbose_name='Plan Device'),
        ),
        migrations.AddField(
            model_name='mms',
            name='plan',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mms', to='plan.Plan'),
        ),
        migrations.AddField(
            model_name='message',
            name='plan',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='message', to='plan.Plan'),
        ),
        migrations.AddField(
            model_name='internationalbenefit',
            name='plan',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='international_benefit', to='plan.Plan'),
        ),
        migrations.AddField(
            model_name='deviceram',
            name='device_phone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='plan.PlanPhone', verbose_name='Plan Device'),
        ),
        migrations.AddField(
            model_name='deviceimage',
            name='plan_device',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deviceimage', to='plan.PlanDevice'),
        ),
        migrations.AddField(
            model_name='data',
            name='plan',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='plan.Plan'),
        ),
        migrations.AddField(
            model_name='call',
            name='plan',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='call', to='plan.Plan'),
        ),
        migrations.AddField(
            model_name='bundle',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Plan'),
        ),
        migrations.AddField(
            model_name='bulkupload',
            name='plans',
            field=models.ManyToManyField(blank=True, related_name='bulkupload', to='plan.Plan', verbose_name='Plans'),
        ),
        migrations.AddField(
            model_name='additionalbenefit',
            name='plan',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='additional_benefit', to='plan.Plan'),
        ),
    ]
